{"version":3,"sources":["InventoryBar.js","room_config/Room1.yaml","Room1.js","App.js","reportWebVitals.js","index.js"],"names":["InventoryBar","dragStartHandler","e","setState","state","lastInvCoords","x","target","attrs","y","dragEndHandler","item","layer","refs","id","parent","position","props","onDragEnd","interactions","filter","i","type","evt","clientX","clientY","draw","renderInventorySlot","Math","floor","width","height","fill","shadowBlur","shadowOpacity","renderInventoryItem","ref","image","draggable","onMouseDown","bind","onClick","className","ceil","this","maxInventorySlots","Array","parseInt","keys","map","items","Component","fetch","require","Room1","_clickHandler","itemId","dotX","pageX","dotY","pageY","lastClicked","_hoverHandler","hoveredItem","_hoverEndHandler","_mouseUpHandler","onMouseUp","renderClickableItem","points","offsetX","offsetY","opacity","closed","onMouseover","onMouseleave","Room1Config","then","r","text","YAML","parse","window","Image","src","onload","radius","Object","App","_handleHiddenItems","interaction","hiddenItem","itemsGained","playerHasLooted","inventoryItems","itemClickHandler","clickedItem","clickInteractionFound","forEach","description","logLastMouseUp","lastMouseUp","itemDragHandler","dragInteractions","found","console","log","usedItems","includes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kRAGqBA,E,kDACnB,aAAe,IAAD,8BACZ,gBASFC,iBAAmB,SAACC,GAClB,EAAKC,SAAL,2BACK,EAAKC,OADV,IAEEC,cAAe,CACbC,EAAGJ,EAAEK,OAAOC,MAAMF,EAClBG,EAAGP,EAAEK,OAAOC,MAAMC,OAfV,EAoBdC,eAAiB,SAACC,EAAMT,GACtB,IAAMU,EAAQ,EAAKC,KAAKF,EAAKG,IAAIC,OACjC,EAAKF,KAAKF,EAAKG,IAAIE,SAAS,EAAKZ,MAAMC,eACvC,EAAKY,MAAMC,UAAUP,EAAKQ,aAAaC,QAAO,SAACC,GAAD,MAAkB,SAAXA,EAAEC,QAAkBpB,EAAEqB,IAAIC,QAAStB,EAAEqB,IAAIE,SAC9Fb,EAAMc,QAxBM,EA2BdC,oBAAsB,SAAChB,EAAMU,GAC3B,OACE,cAAC,IAAD,CAEEf,EAAI,EAAQe,EAAI,GAAR,GACRZ,EAAG,IAAyB,GAAnBmB,KAAKC,MAAMR,EAAE,IACtBS,MAAO,GACPC,OAAQ,GACRC,KAAK,OACLC,WAAY,GACZC,cAAe,IAPVb,IA9BG,EA0Cdc,oBAAsB,SAACxB,EAAMU,GAC3B,OACE,cAAC,IAAD,CACEe,IAAKzB,EAAKG,GAEVR,EAAI,EAAQe,EAAI,GAAR,GACRZ,EAAG,IAAyB,GAAnBmB,KAAKC,MAAMR,EAAE,IACtBS,MAAO,GACPC,OAAQ,GACRM,MAAO1B,EAAK0B,MACZC,WAAS,EACTC,YAAa,EAAKtC,iBAClBiB,UAAW,EAAKR,eAAe8B,KAApB,eAA+B7B,GAC1C8B,QAAS,EAAKxB,MAAMwB,QAAQD,KAAnB,eAA8B7B,IATlCA,EAAKG,KA5Cd,EAAKV,MAAQ,CACXC,cAAe,CACbC,EAAG,EACHG,EAAG,IALK,E,0CA4Dd,WAAU,IAAD,EACP,OACE,eAAC,IAAD,CAAOiC,UAAU,iBAAjB,UACE,cAAC,IAAD,CACEpC,EAAG,EACHG,EAAG,IACHqB,MAAO,IACPC,OAAQ,GAAGH,KAAKe,KAAKC,KAAK3B,MAAM4B,kBAAkB,IAClDb,KAAK,UACLC,WAAY,KAEb,YAAIa,MAAMC,SAASH,KAAK3B,MAAM4B,oBAAoBG,QAAQC,IAAIL,KAAKjB,qBATtE,UAUGiB,KAAK3B,MAAMiC,aAVd,aAUG,EAAkBD,IAAIL,KAAKT,4B,GAzEMgB,a,iBCH3B,MAA0B,mCCInCC,EAAQC,EAAQ,IAEDC,E,kDACnB,aAAe,IAAD,8BACZ,gBAiCFC,cAAgB,SAACC,EAAQtD,GACvB,EAAKe,MAAMwB,QAAQ,EAAKrC,MAAM8C,MAAMM,IACpC,EAAKrD,UAAS,SAACC,GACb,OAAO,2BACFA,GADL,IAEEqD,KAAMvD,EAAEqB,IAAImC,MACZC,KAAMzD,EAAEqB,IAAIqC,MACZC,YAAaL,QAzCL,EA8CdM,cAAgB,SAACN,GACf,EAAKrD,UAAS,SAACC,GACb,OAAO,2BACFA,GADL,IAEE2D,YAAaP,QAlDL,EAuDdQ,iBAAmB,SAACR,EAAQtD,GAC1B,EAAKC,UAAS,SAACC,GACb,OAAO,2BACFA,GADL,IAEE2D,YAAa,WA3DL,EAgEdE,gBAAkB,SAACT,EAAQtD,GACzB,EAAKe,MAAMiD,UAAUV,EAAQtD,EAAEqB,IAAIC,QAAStB,EAAEqB,IAAIE,SAClD,EAAKtB,SAAL,2BACK,EAAKC,OADV,IAEEqD,KAAMvD,EAAEqB,IAAIC,QACZmC,KAAMzD,EAAEqB,IAAIE,YArEF,EAyEd0C,oBAAsB,SAACX,GACrB,IAAM7C,EAAO,EAAKP,MAAM8C,MAAMM,GAC9B,GAAI7C,EACJ,OACE,cAAC,IAAD,CAEEyD,OAAQzD,EAAKK,SAASoD,OACtB9D,EAAGK,EAAKK,SAASqD,QACjB5D,EAAGE,EAAKK,SAASsD,QACjBC,QAAS,EAAKnE,MAAM2D,cAAgBP,EAAS,GAAM,EACnDxB,KAAK,SACLwC,QAAM,EACN/B,QAAS,EAAKc,cAAcf,KAAnB,eAA8BgB,GACvCiB,YAAa,EAAKX,cAActB,KAAnB,eAA8BgB,GAC3CkB,aAAc,EAAKV,iBAAiBxB,KAAtB,eAAiCgB,GAC/CU,UAAW,EAAKD,gBAAgBzB,KAArB,eAAgCgB,IAVtCA,IA5ET,EAAKpD,MAAQ,CACXqD,MAAO,GACPE,MAAO,GACPE,YAAa,cACbE,YAAa,KACb1B,MAAO,KACPa,MAAO,IARG,E,qDAYd,WAAqB,IAAD,OAClBE,EAAMuB,GACHC,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACZF,MAAK,SAAAE,GACJ,EAAK3E,UAAS,SAACC,GACb,OAAO,2BACFA,GADL,IAEE8C,MAAO6B,IAAKC,MAAMF,WAK1B,IAAMzC,EAAQ,IAAI4C,OAAOC,MACzB7C,EAAM8C,IAAM,mBACZ9C,EAAM+C,OAAS,WACb,EAAKjF,SAAL,2BACK,EAAKC,OADV,IAEEiC,MAAOA,Q,oBAiEb,WACE,OAAIO,KAAKxC,MAEP,eAAC,IAAD,CAAOsC,UAAU,WAAjB,UACE,cAAC,IAAD,CACEpC,EAAG,EACHG,EAAG,EACHqB,MAAO,IACPC,OAAQ,IACRM,MAAOO,KAAKxC,MAAMiC,QAEpB,cAAC,IAAD,CACE/B,EAAGsC,KAAKxC,MAAMqD,KACdhD,EAAGmC,KAAKxC,MAAMuD,KACd0B,OAAO,IACPrD,KAAK,QAENsD,OAAOtC,KAAKJ,KAAKxC,MAAM8C,OAAOD,IAAIL,KAAKuB,wBAhBrB,S,GAhGQhB,aCAdoC,G,wDACnB,aAAe,IAAD,8BACZ,gBAmBFC,mBAAqB,SAACC,GAAiB,IAAD,EAC9BC,EAAU,UAAGD,EAAYE,mBAAf,aAAG,EAA0B,GAE7C,GAAGD,IAAe,EAAKE,gBAAgBF,GAAa,CAClD,IAAMrD,EAAQ,IAAI4C,OAAOC,MAezB,OAdA7C,EAAM8C,IAAN,iBAAsBO,EAAW5E,GAAjC,QACAuB,EAAM+C,OAAS,WACb,EAAKjF,SAAL,2BACK,EAAKC,OADV,IAEE0E,KAAMW,EAAYX,KAClBe,eAAe,GAAD,mBACT,EAAKzF,MAAMyF,gBADF,4BAGPH,GAHO,IAIVrD,iBAKD,EAET,OAAO,GAzCK,EA4CdyD,iBAAmB,SAACC,GAAiB,IAAD,EAC9BC,GAAwB,EAC5B,UAAAD,EAAY5E,oBAAZ,SAA0B8E,SAAQ,SAACR,GACT,UAArBA,EAAYnE,OACb0E,EAAwBA,GAAyB,EAAKR,mBAAmBC,OAGzEO,GACF,EAAK7F,SAAL,2BACK,EAAKC,OADV,IAEE0E,KAAMiB,EAAYG,gBAtDV,EA2DdC,eAAiB,SAAC3C,EAAQlD,EAAGG,GAC3B,EAAKN,SAAL,2BACK,EAAKC,OADV,IAEEgG,YAAa,CACX5C,SAAQlD,IAAGG,SA/DH,EAoEd4F,gBAAkB,SAACC,EAAkBhG,EAAGG,GACtC,IAAI8F,GAAQ,EACI,OAAhBD,QAAgB,IAAhBA,KAAkBL,SAAQ,SAACR,GACzBe,QAAQC,IAAIhB,GACTA,EAAYlF,SAAW,EAAKH,MAAMgG,YAAY5C,QAC5ClD,IAAM,EAAKF,MAAMgG,YAAY9F,GAC7BG,IAAM,EAAKL,MAAMgG,YAAY3F,IAEhC,EAAKN,SAAL,2BACK,EAAKC,OADV,IAEE0E,KAAMW,EAAYX,QAEpByB,GAAQ,EACR,EAAKf,mBAAmBC,OAGxBc,GACF,EAAKpG,SAAL,2BACK,EAAKC,OADV,IAEE0E,KAAM,uBArFV,EAAK1E,MAAQ,CACXyC,kBAAmB,GACnBgD,eAAgB,GAChBa,UAAW,GACX5B,KAAM,GACNsB,YAAa,CACX5C,OAAQ,KACRlD,EAAG,EACHG,EAAG,IAVK,E,mDAed,SAAgBE,GACd,OAAOiC,KAAKxC,MAAMyF,eAAe5C,KAAI,SAAAtC,GAAI,OAAIA,EAAKG,MAAI6F,SAAShG,EAAKG,KAC7D8B,KAAKxC,MAAMsG,UAAUzD,KAAI,SAAAtC,GAAI,OAAIA,EAAKG,MAAI6F,SAAShG,EAAKG,M,oBA2EjE,WACE,OACE,sBAAK4B,UAAU,MAAf,UACA,eAAC,IAAD,CAAOA,UAAU,SAASZ,MAAM,MAAMC,OAAO,OAA7C,UACE,cAAC,EAAD,CACEU,QAASG,KAAKkD,iBACd5B,UAAWtB,KAAKuD,iBAElB,cAAC,EAAD,CACEjD,MAAON,KAAKxC,MAAMyF,eAClBhD,kBAAmBD,KAAKxC,MAAMyC,kBAC9BJ,QAASG,KAAKkD,iBACd5E,UAAW0B,KAAKyD,qBAIpB,wBAAQ3D,UAAU,aAAlB,SACGE,KAAKxC,MAAM0E,c,GA9Ga3B,cCMlByD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlC,MAAK,YAAkD,IAA/CmC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5df5820e.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport { Layer, Rect, Image } from 'react-konva';\r\n\r\nexport default class InventoryBar extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      lastInvCoords: {\r\n        x: 0,\r\n        y: 0\r\n      },\r\n    };\r\n  }\r\n\r\n  dragStartHandler = (e) => {\r\n    this.setState({\r\n      ...this.state,\r\n      lastInvCoords: {\r\n        x: e.target.attrs.x,\r\n        y: e.target.attrs.y\r\n      }\r\n    })\r\n  }\r\n\r\n  dragEndHandler = (item, e) => {\r\n    const layer = this.refs[item.id].parent;\r\n    this.refs[item.id].position(this.state.lastInvCoords);\r\n    this.props.onDragEnd(item.interactions.filter((i) => i.type === 'drag'), e.evt.clientX, e.evt.clientY);\r\n    layer.draw();\r\n  }\r\n\r\n  renderInventorySlot = (item, i) => {\r\n    return (\r\n      <Rect\r\n        key={i}\r\n        x={(5 + 50*(i % 10))}\r\n        y={515 + Math.floor(i/10) * 50}\r\n        width={40}\r\n        height={40}\r\n        fill=\"grey\"\r\n        shadowBlur={10}\r\n        shadowOpacity={0.4}\r\n      />\r\n    )\r\n  }\r\n\r\n  renderInventoryItem = (item, i) => {\r\n    return (\r\n      <Image\r\n        ref={item.id}\r\n        key={item.id}\r\n        x={(5 + 50*(i % 10))}\r\n        y={515 + Math.floor(i/10) * 50}\r\n        width={40}\r\n        height={40}\r\n        image={item.image}\r\n        draggable\r\n        onMouseDown={this.dragStartHandler}\r\n        onDragEnd={this.dragEndHandler.bind(this, item)}\r\n        onClick={this.props.onClick.bind(this, item)}\r\n      />\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Layer className='inventoryLayer'>\r\n        <Rect\r\n          x={0}\r\n          y={510}\r\n          width={500}\r\n          height={50*Math.ceil(this.props.maxInventorySlots/10)}\r\n          fill=\"dimgray\"\r\n          shadowBlur={10}\r\n        />\r\n        {[...Array(parseInt(this.props.maxInventorySlots)).keys()].map(this.renderInventorySlot)}\r\n        {this.props.items?.map(this.renderInventoryItem)}\r\n      </Layer>\r\n    );\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Room1.bf0f29a2.yaml\";","import { Component } from 'react';\r\nimport { Layer, Line, Image, Circle } from 'react-konva';\r\nimport YAML from 'yaml'\r\nimport Room1Config from './room_config/Room1.yaml';\r\nconst fetch = require('node-fetch');\r\n\r\nexport default class Room1 extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      dotX: -10,\r\n      dotY: -10,\r\n      lastClicked: 'nothing yet',\r\n      hoveredItem: null,\r\n      image: null,\r\n      items: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(Room1Config)\r\n      .then(r => r.text())\r\n      .then(text => {\r\n        this.setState((state) => {\r\n          return {\r\n            ...state,\r\n            items: YAML.parse(text)\r\n          };\r\n        });\r\n      })\r\n\r\n    const image = new window.Image();\r\n    image.src = \"images/Room1.png\";\r\n    image.onload = () => {\r\n      this.setState({\r\n        ...this.state,\r\n        image: image\r\n      });\r\n    }\r\n  }\r\n\r\n  _clickHandler = (itemId, e) => {\r\n    this.props.onClick(this.state.items[itemId])\r\n    this.setState((state) => {\r\n      return {\r\n        ...state,\r\n        dotX: e.evt.pageX,\r\n        dotY: e.evt.pageY,\r\n        lastClicked: itemId\r\n      }\r\n    })\r\n  }\r\n\r\n  _hoverHandler = (itemId) => {\r\n    this.setState((state) => {\r\n      return {\r\n        ...state,\r\n        hoveredItem: itemId\r\n      }\r\n    })\r\n  }\r\n\r\n  _hoverEndHandler = (itemId, e) => {\r\n    this.setState((state) => {\r\n      return {\r\n        ...state,\r\n        hoveredItem: null\r\n      }\r\n    })\r\n  }\r\n\r\n  _mouseUpHandler = (itemId, e) => {\r\n    this.props.onMouseUp(itemId, e.evt.clientX, e.evt.clientY)\r\n    this.setState({\r\n      ...this.state,\r\n      dotX: e.evt.clientX,\r\n      dotY: e.evt.clientY\r\n    })\r\n  }\r\n\r\n  renderClickableItem = (itemId) => {\r\n    const item = this.state.items[itemId];\r\n    if(!item) return;\r\n    return (\r\n      <Line\r\n        key={itemId}\r\n        points={item.position.points}\r\n        x={item.position.offsetX}\r\n        y={item.position.offsetY}\r\n        opacity={this.state.hoveredItem === itemId ? 0.2 : 0}\r\n        fill='orange'\r\n        closed\r\n        onClick={this._clickHandler.bind(this, itemId)}\r\n        onMouseover={this._hoverHandler.bind(this, itemId)}\r\n        onMouseleave={this._hoverEndHandler.bind(this, itemId)}\r\n        onMouseUp={this._mouseUpHandler.bind(this, itemId)}\r\n      />\r\n    )\r\n  }\r\n\r\n\r\n  render() {\r\n    if(!this.state) return null;\r\n    return (\r\n      <Layer className='imgLayer'>\r\n        <Image\r\n          x={0}\r\n          y={0}\r\n          width={500}\r\n          height={500}\r\n          image={this.state.image}\r\n        />\r\n        <Circle\r\n          x={this.state.dotX}\r\n          y={this.state.dotY}\r\n          radius='4'\r\n          fill='red'\r\n        />\r\n        {Object.keys(this.state.items).map(this.renderClickableItem)}\r\n      </Layer>\r\n    );\r\n  }\r\n}\r\n","import { Component } from 'react';\nimport { Stage, Layer, Line, Rect, Image } from 'react-konva';\nimport InventoryBar from './InventoryBar';\nimport Room1 from './Room1';\nimport './App.css';\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      maxInventorySlots: 10,\n      inventoryItems: [],\n      usedItems: [],\n      text: '',\n      lastMouseUp: {\n        itemId: null,\n        x: 0,\n        y: 0\n      }\n    };\n  }\n\n  playerHasLooted(item) {\n    return this.state.inventoryItems.map(item => item.id).includes(item.id) ||\n           this.state.usedItems.map(item => item.id).includes(item.id);\n  }\n\n  _handleHiddenItems = (interaction) => {\n    const hiddenItem = interaction.itemsGained?.[0]; // TODO: one-to-many support here\n\n    if(hiddenItem && !this.playerHasLooted(hiddenItem)) {\n      const image = new window.Image();\n      image.src = `images/${hiddenItem.id}.png`;\n      image.onload = () => {\n        this.setState({\n          ...this.state,\n          text: interaction.text,\n          inventoryItems: [\n            ...this.state.inventoryItems,\n            {\n              ...hiddenItem,\n              image\n            }\n          ]\n        });\n      }\n      return true;\n    }\n    return false;\n  }\n\n  itemClickHandler = (clickedItem) => {\n    let clickInteractionFound = false;\n    clickedItem.interactions?.forEach((interaction) => {\n      if(interaction.type === 'click') {\n        clickInteractionFound = clickInteractionFound || this._handleHiddenItems(interaction);\n      }\n    })\n    if(!clickInteractionFound) {\n      this.setState({\n        ...this.state,\n        text: clickedItem.description\n      });\n    }\n  }\n\n  logLastMouseUp = (itemId, x, y) => {\n    this.setState({\n      ...this.state,\n      lastMouseUp: {\n        itemId, x, y\n      }\n    })\n  }\n\n  itemDragHandler = (dragInteractions, x, y) => {\n    let found = false;\n    dragInteractions?.forEach((interaction) => {\n      console.log(interaction);\n      if(interaction.target === this.state.lastMouseUp.itemId\n        && x === this.state.lastMouseUp.x\n        && y === this.state.lastMouseUp.y\n      ) {\n        this.setState({\n          ...this.state,\n          text: interaction.text\n        });\n        found = true;\n        this._handleHiddenItems(interaction);\n      }\n    });\n    if(!found) {\n      this.setState({\n        ...this.state,\n        text: 'Nothing happens.'\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n      <Stage className='canvas' width='500' height='1000'>\n        <Room1\n          onClick={this.itemClickHandler}\n          onMouseUp={this.logLastMouseUp}\n        />\n        <InventoryBar\n          items={this.state.inventoryItems}\n          maxInventorySlots={this.state.maxInventorySlots}\n          onClick={this.itemClickHandler}\n          onDragEnd={this.itemDragHandler}\n        />\n      </Stage>\n\n      <header className=\"App-header\">\n        {this.state.text}\n      </header>\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}