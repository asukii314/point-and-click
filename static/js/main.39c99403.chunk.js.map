{"version":3,"sources":["InventoryBar.js","Room.js","room_config/room1.yaml","room_config/room2.yaml","App.js","reportWebVitals.js","index.js"],"names":["InventoryBar","dragStartHandler","e","setState","state","lastInvCoords","x","target","attrs","y","dragEndHandler","item","layer","refs","id","parent","position","props","onDragEnd","interactions","filter","i","type","evt","clientX","clientY","draw","renderInventorySlot","Math","floor","width","height","fill","shadowBlur","shadowOpacity","renderInventoryItem","ref","image","draggable","onMouseDown","bind","onClick","className","ceil","this","maxInventorySlots","Array","parseInt","keys","map","items","Component","fetch","require","Room","_clickHandler","itemId","dotX","pageX","dotY","pageY","_hoverHandler","hoveredItem","_hoverEndHandler","_mouseUpHandler","onMouseUp","renderClickableItem","points","offsetX","offsetY","opacity","closed","onMouseover","onMouseleave","config","then","r","text","YAML","parse","window","Image","src","bgImage","onload","radius","Object","App","_handleLostItems","interaction","lostItem","itemsLost","newInventory","inventoryItems","usedItems","_handleHiddenItems","hiddenItem","itemsGained","playerHasLooted","_handleRoomTransitions","room","newRoom","itemClickHandler","clickedItem","clickInteractionFound","forEach","description","logLastMouseUp","lastMouseUp","itemDragHandler","dragInteractions","found","configMap","room1","Room1Config","room2","Room2Config","includes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kRAGqBA,E,kDACnB,aAAe,IAAD,8BACZ,gBASFC,iBAAmB,SAACC,GAClB,EAAKC,SAAL,2BACK,EAAKC,OADV,IAEEC,cAAe,CACbC,EAAGJ,EAAEK,OAAOC,MAAMF,EAClBG,EAAGP,EAAEK,OAAOC,MAAMC,OAfV,EAoBdC,eAAiB,SAACC,EAAMT,GAAO,IAAD,EACtBU,EAAQ,EAAKC,KAAKF,EAAKG,IAAIC,OACjC,EAAKF,KAAKF,EAAKG,IAAIE,SAAS,EAAKZ,MAAMC,eACvC,EAAKY,MAAMC,UAAX,UAAqBP,EAAKQ,oBAA1B,aAAqB,EAAmBC,QAAO,SAACC,GAAD,MAAkB,SAAXA,EAAEC,QAAkBpB,EAAEqB,IAAIC,QAAStB,EAAEqB,IAAIE,SAC/Fb,EAAMc,QAxBM,EA2BdC,oBAAsB,SAAChB,EAAMU,GAC3B,OACE,cAAC,IAAD,CAEEf,EAAI,EAAQe,EAAI,GAAR,GACRZ,EAAG,IAAyB,GAAnBmB,KAAKC,MAAMR,EAAE,IACtBS,MAAO,GACPC,OAAQ,GACRC,KAAK,OACLC,WAAY,GACZC,cAAe,IAPVb,IA9BG,EA0Cdc,oBAAsB,SAACxB,EAAMU,GAC3B,OACE,cAAC,IAAD,CACEe,IAAKzB,EAAKG,GAEVR,EAAI,EAAQe,EAAI,GAAR,GACRZ,EAAG,IAAyB,GAAnBmB,KAAKC,MAAMR,EAAE,IACtBS,MAAO,GACPC,OAAQ,GACRM,MAAO1B,EAAK0B,MACZC,WAAS,EACTC,YAAa,EAAKtC,iBAClBiB,UAAW,EAAKR,eAAe8B,KAApB,eAA+B7B,GAC1C8B,QAAS,EAAKxB,MAAMwB,QAAQD,KAAnB,eAA8B7B,IATlCA,EAAKG,KA5Cd,EAAKV,MAAQ,CACXC,cAAe,CACbC,EAAG,EACHG,EAAG,IALK,E,0CA4Dd,WAAU,IAAD,EACP,OACE,eAAC,IAAD,CAAOiC,UAAU,iBAAjB,UACE,cAAC,IAAD,CACEpC,EAAG,EACHG,EAAG,IACHqB,MAAO,IACPC,OAAQ,GAAGH,KAAKe,KAAKC,KAAK3B,MAAM4B,kBAAkB,IAClDb,KAAK,UACLC,WAAY,KAEb,YAAIa,MAAMC,SAASH,KAAK3B,MAAM4B,oBAAoBG,QAAQC,IAAIL,KAAKjB,qBATtE,UAUGiB,KAAK3B,MAAMiC,aAVd,aAUG,EAAkBD,IAAIL,KAAKT,4B,GAzEMgB,a,iBCCpCC,EAAQC,EAAQ,IAEDC,E,kDACnB,aAAe,IAAD,8BACZ,gBAgCFC,cAAgB,SAACC,EAAQtD,GACvB,EAAKe,MAAMwB,QAAQ,EAAKrC,MAAM8C,MAAMM,IACpC,EAAKrD,UAAS,SAACC,GACb,OAAO,2BACFA,GADL,IAEEqD,KAAMvD,EAAEqB,IAAImC,MACZC,KAAMzD,EAAEqB,IAAIqC,YAvCJ,EA4CdC,cAAgB,SAACL,GACf,EAAKrD,UAAS,SAACC,GACb,OAAO,2BACFA,GADL,IAEE0D,YAAaN,QAhDL,EAqDdO,iBAAmB,SAACP,EAAQtD,GAC1B,EAAKC,UAAS,SAACC,GACb,OAAO,2BACFA,GADL,IAEE0D,YAAa,WAzDL,EA8DdE,gBAAkB,SAACR,EAAQtD,GACzB,EAAKe,MAAMgD,UAAUT,EAAQtD,EAAEqB,IAAIC,QAAStB,EAAEqB,IAAIE,SAClD,EAAKtB,SAAL,2BACK,EAAKC,OADV,IAEEqD,KAAMvD,EAAEqB,IAAIC,QACZmC,KAAMzD,EAAEqB,IAAIE,YAnEF,EAuEdyC,oBAAsB,SAACV,GACrB,IAAM7C,EAAO,EAAKP,MAAM8C,MAAMM,GAC9B,GAAI7C,EACJ,OACE,cAAC,IAAD,CAEEwD,OAAQxD,EAAKK,SAASmD,OACtB7D,EAAGK,EAAKK,SAASoD,QACjB3D,EAAGE,EAAKK,SAASqD,QACjBC,QAAS,EAAKlE,MAAM0D,cAAgBN,EAAS,GAAM,EACnDxB,KAAK,SACLuC,QAAM,EACN9B,QAAS,EAAKc,cAAcf,KAAnB,eAA8BgB,GACvCgB,YAAa,EAAKX,cAAcrB,KAAnB,eAA8BgB,GAC3CiB,aAAc,EAAKV,iBAAiBvB,KAAtB,eAAiCgB,GAC/CS,UAAW,EAAKD,gBAAgBxB,KAArB,eAAgCgB,IAVtCA,IA1ET,EAAKpD,MAAQ,CACXqD,MAAO,GACPE,MAAO,GACPG,YAAa,KACbzB,MAAO,KACPa,MAAO,IAPG,E,qDAWd,WAAqB,IAAD,OAClBE,EAAMR,KAAK3B,MAAMyD,QACdC,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACZF,MAAK,SAAAE,GACJ,EAAK1E,UAAS,SAACC,GACb,OAAO,2BACFA,GADL,IAEE8C,MAAO4B,IAAKC,MAAMF,WAK1B,IAAMxC,EAAQ,IAAI2C,OAAOC,MACzB5C,EAAM6C,IAAN,iBAAsBtC,KAAK3B,MAAMkE,SACjC9C,EAAM+C,OAAS,WACb,EAAKjF,SAAL,2BACK,EAAKC,OADV,IAEEiC,MAAOA,Q,oBAgEb,WACE,OAAIO,KAAKxC,MAEP,eAAC,IAAD,CAAOsC,UAAU,WAAjB,UACE,cAAC,IAAD,CACEpC,EAAG,EACHG,EAAG,EACHqB,MAAO,IACPC,OAAQ,IACRM,MAAOO,KAAKxC,MAAMiC,QAEpB,cAAC,IAAD,CACE/B,EAAGsC,KAAKxC,MAAMqD,KACdhD,EAAGmC,KAAKxC,MAAMuD,KACd0B,OAAO,IACPrD,KAAK,QAENsD,OAAOtC,KAAKJ,KAAKxC,MAAM8C,OAAOD,IAAIL,KAAKsB,wBAhBrB,S,GA9FOf,aCNnB,MAA0B,mCCA1B,MAA0B,mCCQpBoC,G,wDACnB,aAAe,IAAD,8BACZ,gBAyBFC,iBAAmB,SAACC,GAAiB,IAAD,EAC5BC,EAAQ,UAAGD,EAAYE,iBAAf,aAAG,EAAwB,GACzC,IAAID,EAAU,OAAO,EAErB,IAAME,EAAe,EAAKxF,MAAMyF,eAAezE,QAAO,SAACT,GAAD,OAAUA,EAAKG,IAAM4E,EAAS5E,MAUpF,OATA,EAAKX,SAAL,2BACK,EAAKC,OADV,IAEEyE,KAAMY,EAAYZ,KAClBgB,eAAgBD,EAChBE,UAAU,GAAD,mBACJ,EAAK1F,MAAM0F,WADP,CAEPJ,QAGG,GAxCK,EA2CdK,mBAAqB,SAACN,GAAiB,IAAD,EAC9BO,EAAU,UAAGP,EAAYQ,mBAAf,aAAG,EAA0B,GAE7C,GAAGD,IAAe,EAAKE,gBAAgBF,GAAa,CAClD,IAAM3D,EAAQ,IAAI2C,OAAOC,MAezB,OAdA5C,EAAM6C,IAAN,iBAAsBc,EAAWlF,GAAjC,QACAuB,EAAM+C,OAAS,WACb,EAAKjF,SAAL,2BACK,EAAKC,OADV,IAEEyE,KAAMY,EAAYZ,KAClBgB,eAAe,GAAD,mBACT,EAAKzF,MAAMyF,gBADF,4BAGPG,GAHO,IAIV3D,iBAKD,EAET,OAAO,GAhEK,EAmEd8D,uBAAyB,SAACV,GACxB,IAAMW,EAAOX,EAAYY,QACzB,QAAGD,IACD,EAAKjG,SAAL,2BACK,EAAKC,OADV,IAEEyE,KAAMY,EAAYZ,KAClBuB,WAEK,IA3EG,EAgFdE,iBAAmB,SAACC,GAAiB,IAAD,EAC9BC,GAAwB,EAC5B,UAAAD,EAAYpF,oBAAZ,SAA0BsF,SAAQ,SAAChB,GACT,UAArBA,EAAYnE,OACbkF,EAAwBA,GACK,EAAKT,mBAAmBN,IACxB,EAAKD,iBAAiBC,IACtB,EAAKU,uBAAuBV,OAGzDe,GACF,EAAKrG,SAAL,2BACK,EAAKC,OADV,IAEEyE,KAAM0B,EAAYG,gBA7FV,EAkGdC,eAAiB,SAACnD,EAAQlD,EAAGG,GAC3B,EAAKN,SAAL,2BACK,EAAKC,OADV,IAEEwG,YAAa,CACXpD,SAAQlD,IAAGG,SAtGH,EA2GdoG,gBAAkB,SAACC,EAAkBxG,EAAGG,GACtC,IAAIsG,GAAQ,EACI,OAAhBD,QAAgB,IAAhBA,KAAkBL,SAAQ,SAAChB,GACtBA,EAAYlF,SAAW,EAAKH,MAAMwG,YAAYpD,QAC5ClD,IAAM,EAAKF,MAAMwG,YAAYtG,GAC7BG,IAAM,EAAKL,MAAMwG,YAAYnG,IAEhC,EAAKN,SAAL,2BACK,EAAKC,OADV,IAEEyE,KAAMY,EAAYZ,QAEpBkC,GAAQ,EACR,EAAKhB,mBAAmBN,GACxB,EAAKD,iBAAiBC,OAGtBsB,GACF,EAAK5G,SAAL,2BACK,EAAKC,OADV,IAEEyE,KAAM,uBA5HV,EAAKzE,MAAQ,CACXyC,kBAAmB,GACnBgD,eAAgB,GAChBC,UAAW,GACXjB,KAAM,GACN+B,YAAa,CACXpD,OAAQ,KACRlD,EAAG,EACHG,EAAG,GAEL2F,KAAM,SAGR,EAAKY,UAAY,CACfC,MAAOC,EACPC,MAAOC,GAjBG,E,mDAqBd,SAAgBzG,GACd,OAAOiC,KAAKxC,MAAMyF,eAAe5C,KAAI,SAAAtC,GAAI,OAAIA,EAAKG,MAAIuG,SAAS1G,EAAKG,KAC7D8B,KAAKxC,MAAM0F,UAAU7C,KAAI,SAAAtC,GAAI,OAAIA,EAAKG,MAAIuG,SAAS1G,EAAKG,M,oBA4GjE,WACE,OACE,sBAAK4B,UAAU,MAAf,UACA,eAAC,IAAD,CAAOA,UAAU,SAASZ,MAAM,MAAMC,OAAO,OAA7C,UACE,cAAC,EAAD,CAEE2C,OAAQ9B,KAAKoE,UAAUpE,KAAKxC,MAAMgG,MAClCjB,QAAO,UAAKvC,KAAKxC,MAAMgG,KAAhB,QACP3D,QAASG,KAAK0D,iBACdrC,UAAWrB,KAAK+D,gBAJX/D,KAAKxC,MAAMgG,MAMlB,cAAC,EAAD,CACElD,MAAON,KAAKxC,MAAMyF,eAClBhD,kBAAmBD,KAAKxC,MAAMyC,kBAC9BJ,QAASG,KAAK0D,iBACdpF,UAAW0B,KAAKiE,qBAIpB,wBAAQnE,UAAU,aAAlB,SACGE,KAAKxC,MAAMyE,c,GAxJa1B,cCIlBmE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7C,MAAK,YAAkD,IAA/C8C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.39c99403.chunk.js","sourcesContent":["import { Component } from 'react';\nimport { Layer, Rect, Image } from 'react-konva';\n\nexport default class InventoryBar extends Component {\n  constructor() {\n    super();\n    this.state = {\n      lastInvCoords: {\n        x: 0,\n        y: 0\n      },\n    };\n  }\n\n  dragStartHandler = (e) => {\n    this.setState({\n      ...this.state,\n      lastInvCoords: {\n        x: e.target.attrs.x,\n        y: e.target.attrs.y\n      }\n    })\n  }\n\n  dragEndHandler = (item, e) => {\n    const layer = this.refs[item.id].parent;\n    this.refs[item.id].position(this.state.lastInvCoords);\n    this.props.onDragEnd(item.interactions?.filter((i) => i.type === 'drag'), e.evt.clientX, e.evt.clientY);\n    layer.draw();\n  }\n\n  renderInventorySlot = (item, i) => {\n    return (\n      <Rect\n        key={i}\n        x={(5 + 50*(i % 10))}\n        y={515 + Math.floor(i/10) * 50}\n        width={40}\n        height={40}\n        fill=\"grey\"\n        shadowBlur={10}\n        shadowOpacity={0.4}\n      />\n    )\n  }\n\n  renderInventoryItem = (item, i) => {\n    return (\n      <Image\n        ref={item.id}\n        key={item.id}\n        x={(5 + 50*(i % 10))}\n        y={515 + Math.floor(i/10) * 50}\n        width={40}\n        height={40}\n        image={item.image}\n        draggable\n        onMouseDown={this.dragStartHandler}\n        onDragEnd={this.dragEndHandler.bind(this, item)}\n        onClick={this.props.onClick.bind(this, item)}\n      />\n    )\n  }\n\n  render() {\n    return (\n      <Layer className='inventoryLayer'>\n        <Rect\n          x={0}\n          y={510}\n          width={500}\n          height={50*Math.ceil(this.props.maxInventorySlots/10)}\n          fill=\"dimgray\"\n          shadowBlur={10}\n        />\n        {[...Array(parseInt(this.props.maxInventorySlots)).keys()].map(this.renderInventorySlot)}\n        {this.props.items?.map(this.renderInventoryItem)}\n      </Layer>\n    );\n  }\n}\n","import { Component } from 'react';\nimport { Layer, Line, Image, Circle } from 'react-konva';\nimport YAML from 'yaml'\n\nconst fetch = require('node-fetch');\n\nexport default class Room extends Component {\n  constructor() {\n    super();\n    this.state = {\n      dotX: -10,\n      dotY: -10,\n      hoveredItem: null,\n      image: null,\n      items: {}\n    };\n  }\n\n  componentDidMount() {\n    fetch(this.props.config)\n      .then(r => r.text())\n      .then(text => {\n        this.setState((state) => {\n          return {\n            ...state,\n            items: YAML.parse(text)\n          };\n        });\n      })\n\n    const image = new window.Image();\n    image.src = `images/${this.props.bgImage}`;\n    image.onload = () => {\n      this.setState({\n        ...this.state,\n        image: image\n      });\n    }\n  }\n\n  _clickHandler = (itemId, e) => {\n    this.props.onClick(this.state.items[itemId])\n    this.setState((state) => {\n      return {\n        ...state,\n        dotX: e.evt.pageX,\n        dotY: e.evt.pageY\n      }\n    })\n  }\n\n  _hoverHandler = (itemId) => {\n    this.setState((state) => {\n      return {\n        ...state,\n        hoveredItem: itemId\n      }\n    })\n  }\n\n  _hoverEndHandler = (itemId, e) => {\n    this.setState((state) => {\n      return {\n        ...state,\n        hoveredItem: null\n      }\n    })\n  }\n\n  _mouseUpHandler = (itemId, e) => {\n    this.props.onMouseUp(itemId, e.evt.clientX, e.evt.clientY)\n    this.setState({\n      ...this.state,\n      dotX: e.evt.clientX,\n      dotY: e.evt.clientY\n    })\n  }\n\n  renderClickableItem = (itemId) => {\n    const item = this.state.items[itemId];\n    if(!item) return;\n    return (\n      <Line\n        key={itemId}\n        points={item.position.points}\n        x={item.position.offsetX}\n        y={item.position.offsetY}\n        opacity={this.state.hoveredItem === itemId ? 0.2 : 0}\n        fill='orange'\n        closed\n        onClick={this._clickHandler.bind(this, itemId)}\n        onMouseover={this._hoverHandler.bind(this, itemId)}\n        onMouseleave={this._hoverEndHandler.bind(this, itemId)}\n        onMouseUp={this._mouseUpHandler.bind(this, itemId)}\n      />\n    )\n  }\n\n\n  render() {\n    if(!this.state) return null;\n    return (\n      <Layer className='imgLayer'>\n        <Image\n          x={0}\n          y={0}\n          width={500}\n          height={500}\n          image={this.state.image}\n        />\n        <Circle\n          x={this.state.dotX}\n          y={this.state.dotY}\n          radius='4'\n          fill='red'\n        />\n        {Object.keys(this.state.items).map(this.renderClickableItem)}\n      </Layer>\n    );\n  }\n}\n","export default __webpack_public_path__ + \"static/media/room1.6f5deb7b.yaml\";","export default __webpack_public_path__ + \"static/media/room2.298ea5d0.yaml\";","import { Component } from 'react';\nimport { Stage, Layer, Line, Rect, Image } from 'react-konva';\nimport InventoryBar from './InventoryBar';\nimport Room from './Room';\nimport Room1Config from './room_config/room1.yaml';\nimport Room2Config from './room_config/room2.yaml';\nimport './App.css';\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      maxInventorySlots: 10,\n      inventoryItems: [],\n      usedItems: [],\n      text: '',\n      lastMouseUp: {\n        itemId: null,\n        x: 0,\n        y: 0\n      },\n      room: 'room1'\n    };\n\n    this.configMap = {\n      room1: Room1Config,\n      room2: Room2Config\n    }\n  }\n\n  playerHasLooted(item) {\n    return this.state.inventoryItems.map(item => item.id).includes(item.id) ||\n           this.state.usedItems.map(item => item.id).includes(item.id);\n  }\n\n  _handleLostItems = (interaction) => {\n    const lostItem = interaction.itemsLost?.[0]; // TODO: one-to-many support here\n    if(!lostItem) return false;\n\n    const newInventory = this.state.inventoryItems.filter((item) => item.id != lostItem.id);\n    this.setState({\n      ...this.state,\n      text: interaction.text,\n      inventoryItems: newInventory,\n      usedItems: [\n        ...this.state.usedItems,\n        lostItem\n      ]\n    });\n    return true;\n  }\n\n  _handleHiddenItems = (interaction) => {\n    const hiddenItem = interaction.itemsGained?.[0]; // TODO: one-to-many support here\n\n    if(hiddenItem && !this.playerHasLooted(hiddenItem)) {\n      const image = new window.Image();\n      image.src = `images/${hiddenItem.id}.png`;\n      image.onload = () => {\n        this.setState({\n          ...this.state,\n          text: interaction.text,\n          inventoryItems: [\n            ...this.state.inventoryItems,\n            {\n              ...hiddenItem,\n              image\n            }\n          ]\n        });\n      }\n      return true;\n    }\n    return false;\n  }\n\n  _handleRoomTransitions = (interaction) => {\n    const room = interaction.newRoom;\n    if(room) {\n      this.setState({\n        ...this.state,\n        text: interaction.text,\n        room\n      });\n      return true;\n    }\n    return false;\n  }\n\n  itemClickHandler = (clickedItem) => {\n    let clickInteractionFound = false;\n    clickedItem.interactions?.forEach((interaction) => {\n      if(interaction.type === 'click') {\n        clickInteractionFound = clickInteractionFound\n                                  || this._handleHiddenItems(interaction)\n                                  || this._handleLostItems(interaction)\n                                  || this._handleRoomTransitions(interaction);\n      }\n    })\n    if(!clickInteractionFound) {\n      this.setState({\n        ...this.state,\n        text: clickedItem.description\n      });\n    }\n  }\n\n  logLastMouseUp = (itemId, x, y) => {\n    this.setState({\n      ...this.state,\n      lastMouseUp: {\n        itemId, x, y\n      }\n    })\n  }\n\n  itemDragHandler = (dragInteractions, x, y) => {\n    let found = false;\n    dragInteractions?.forEach((interaction) => {\n      if(interaction.target === this.state.lastMouseUp.itemId\n        && x === this.state.lastMouseUp.x\n        && y === this.state.lastMouseUp.y\n      ) {\n        this.setState({\n          ...this.state,\n          text: interaction.text\n        });\n        found = true;\n        this._handleHiddenItems(interaction);\n        this._handleLostItems(interaction);\n      }\n    });\n    if(!found) {\n      this.setState({\n        ...this.state,\n        text: 'Nothing happens.'\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n      <Stage className='canvas' width='500' height='1000'>\n        <Room\n          key={this.state.room}\n          config={this.configMap[this.state.room]}\n          bgImage={`${this.state.room}.png`}\n          onClick={this.itemClickHandler}\n          onMouseUp={this.logLastMouseUp}\n        />\n        <InventoryBar\n          items={this.state.inventoryItems}\n          maxInventorySlots={this.state.maxInventorySlots}\n          onClick={this.itemClickHandler}\n          onDragEnd={this.itemDragHandler}\n        />\n      </Stage>\n\n      <header className=\"App-header\">\n        {this.state.text}\n      </header>\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}