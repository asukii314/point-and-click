{"version":3,"sources":["InventoryBar.js","Room.js","Game.js","Navbar.js","config/room1.yaml","config/room2.yaml","App.js","config/items.yaml","reportWebVitals.js","index.js"],"names":["InventoryBar","dragStartHandler","e","setState","state","lastInvCoords","x","target","attrs","y","dragEndHandler","item","layer","refs","id","parent","position","slot","getInventorySlotForCoords","getStage","getPointerPosition","props","items","length","onCombineItems","onDragEnd","interactions","draw","xSlot","Math","ceil","ySlot","posn","maxInventorySlots","renderInventorySlot","i","floor","width","height","fill","shadowBlur","shadowOpacity","renderInventoryItem","isHovered","hoveredIdx","ref","image","draggable","onMouseDown","onDragStart","bind","onClick","onTap","onMouseOver","className","this","Array","parseInt","keys","map","Component","fetch","require","Room","_clickHandler","itemId","coords","dotX","dotY","_hoverHandler","hoveredItem","_hoverEndHandler","_mouseUpHandler","pos","onMouseUp","renderClickableItem","points","offsetX","offsetY","opacity","closed","onMouseover","onMouseleave","onTouchEnd","config","then","r","text","YAML","parse","window","Image","src","bgImage","onload","radius","Object","App","_handleLostItems","interaction","lostItemIds","itemsLost","newInventory","inventoryItems","filter","includes","usedItemIds","_handleHiddenItems","itemsGained","found","hiddenItemId","playerHasLooted","itemInfo","hiddenItem","flags","_handleRoomTransitions","room","newRoom","_handleFlagsSet","newFlags","flagsSet","flag","_handleLocks","code","unlockFlags","unlocks","activeLock","onUnlock","_getValidInteractions","type","requiredFlags","_getImagePreviewUrl","itemUrl","reset","clickedItemId","imagePreviewUrl","itemClickHandler","clickedItem","forEach","description","logLastMouseUp","lastMouseUp","itemDragHandler","combineItemsHandler","draggedItem","stationaryItem","defaultRoom","itemsConfig","roomsConfig","style","display","flexDirection","alt","marginTop","color","combination","onMatch","openText","Navbar","_renderGameLink","gameID","to","gamesConfig","name","role","href","room1","Room1Config","room2","Room2Config","exact","path","HomePage","ContactPage","children","RoutedGame","marginLeft","useParams","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5951bdb3.chunk.js","sourcesContent":["import { Component } from 'react';\nimport { Layer, Rect, Image } from 'react-konva';\n\nexport default class InventoryBar extends Component {\n  constructor() {\n    super();\n    this.state = {\n      lastInvCoords: {\n        x: 0,\n        y: 0\n      },\n      hoveredIdx: 0,\n    };\n  }\n\n  dragStartHandler = (e) => {\n    this.setState({\n      ...this.state,\n      lastInvCoords: {\n        x: e.target.attrs.x,\n        y: e.target.attrs.y\n      }\n    })\n  }\n\n  dragEndHandler = (item, e) => {\n    const layer = this.refs[item.id].parent;\n    this.refs[item.id].position(this.state.lastInvCoords);\n    let slot = this.getInventorySlotForCoords(e.target.getStage().getPointerPosition());\n    if(slot !== null && this.props.items.length > slot) {\n      this.props.onCombineItems(item, this.props.items[slot])\n    } else {\n      this.props.onDragEnd(item.interactions, e.target.getStage().getPointerPosition());\n    }\n    layer.draw();\n  }\n\n  getInventorySlotForCoords = ({x, y}) => {\n    let xSlot = Math.ceil((x-5)/50);\n    let ySlot = Math.ceil((y-510)/50);\n    if(xSlot < 1 || xSlot > 10 || ySlot < 1) return null;\n    let posn = 10*(ySlot-1)+(xSlot-1);\n    if(posn >= this.props.maxInventorySlots) return null;\n    return posn;\n  }\n\n  renderInventorySlot = (item, i) => {\n    return (\n      <Rect\n        key={i}\n        x={(5 + 50*(i % 10))}\n        y={515 + Math.floor(i/10) * 50}\n        width={40}\n        height={40}\n        fill=\"grey\"\n        shadowBlur={10}\n        shadowOpacity={0.4}\n      />\n    )\n  }\n\n  renderInventoryItem = (item, i, isHovered=false) => {\n    if(!item || (!isHovered && i === this.state.hoveredIdx)) return;\n    return (\n      <Image\n        ref={item.id}\n        key={item.id}\n        x={(5 + 50*(i % 10))}\n        y={515 + Math.floor(i/10) * 50}\n        width={40}\n        height={40}\n        image={item.image}\n        draggable\n        onMouseDown={this.dragStartHandler}\n        onDragStart={this.dragStartHandler}\n        onDragEnd={this.dragEndHandler.bind(this, item)}\n        onClick={this.props.onClick.bind(this, item)}\n        onTap={this.props.onClick.bind(this, item)}\n        onMouseOver={() => {\n          this.setState({\n            ...this.state,\n            hoveredIdx: i\n          })\n        }}\n      />\n    )\n  }\n\n  render() {\n    return (\n      <Layer className='inventoryLayer'>\n        <Rect\n          x={0}\n          y={510}\n          width={500}\n          height={50*Math.ceil(this.props.maxInventorySlots/10)}\n          fill=\"dimgray\"\n          shadowBlur={10}\n        />\n        {[...Array(parseInt(this.props.maxInventorySlots)).keys()].map(this.renderInventorySlot)}\n\n        {/* render the item being hovered after all others, so it has the highest z-index when dragged */}\n        {this.props.items?.map((item, i) => (this.renderInventoryItem(item, i)))}\n        {this.props.items.length > 0 && this.renderInventoryItem(this.props.items[this.state.hoveredIdx], this.state.hoveredIdx, true)}\n      </Layer>\n    );\n  }\n}\n","import { Component } from 'react';\nimport { Layer, Line, Image, Circle } from 'react-konva';\nimport YAML from 'yaml'\n\nconst fetch = require('node-fetch');\n\nexport default class Room extends Component {\n  constructor() {\n    super();\n    this.state = {\n      dotX: -10,\n      dotY: -10,\n      hoveredItem: null,\n      image: null,\n      items: {}\n    };\n  }\n\n  componentDidMount() {\n    fetch(this.props.config)\n      .then(r => r.text())\n      .then(text => {\n        this.setState((state) => {\n          return {\n            ...state,\n            items: YAML.parse(text)\n          };\n        });\n      })\n\n    const image = new window.Image();\n    image.src = `images/${this.props.bgImage}`;\n    image.onload = () => {\n      this.setState({\n        ...this.state,\n        image: image\n      });\n    }\n  }\n\n  _clickHandler = (itemId, e) => {\n    const coords = e.target.getStage().getPointerPosition();\n    this.props.onClick(this.state.items[itemId])\n    this.setState((state) => {\n      return {\n        ...state,\n        dotX: coords.x,\n        dotY: coords.y,\n      }\n    })\n  }\n\n  _hoverHandler = (itemId) => {\n    this.setState((state) => {\n      return {\n        ...state,\n        hoveredItem: itemId\n      }\n    })\n  }\n\n  _hoverEndHandler = (itemId, e) => {\n    this.setState((state) => {\n      return {\n        ...state,\n        hoveredItem: null\n      }\n    })\n  }\n\n  _mouseUpHandler = (itemId, e) => {\n    const pos = e.target.getStage().getPointerPosition();\n    this.props.onMouseUp(itemId, pos)\n    this.setState({\n      ...this.state,\n      dotX: pos.x,\n      dotY: pos.y\n    })\n  }\n\n  renderClickableItem = (itemId) => {\n    const item = this.state.items[itemId];\n    if(!item) return;\n    return (\n      <Line\n        key={itemId}\n        points={item.position.points}\n        x={item.position.offsetX}\n        y={item.position.offsetY}\n        opacity={this.state.hoveredItem === itemId ? 0.2 : 0}\n        fill='orange'\n        closed\n        onClick={(e) => this._clickHandler(itemId, e)}\n        onTap={(e) => this._clickHandler(itemId, e)}\n        onMouseover={this._hoverHandler.bind(this, itemId)}\n        onMouseleave={this._hoverEndHandler.bind(this, itemId)}\n        onTouchEnd={this._mouseUpHandler.bind(this, itemId)}\n        onMouseUp={this._mouseUpHandler.bind(this, itemId)}\n      />\n    )\n  }\n\n\n  render() {\n    if(!this.state) return null;\n    return (\n      <Layer className='imgLayer'>\n        <Image\n          x={0}\n          y={0}\n          width={500}\n          height={500}\n          image={this.state.image}\n        />\n        <Circle\n          x={this.state.dotX}\n          y={this.state.dotY}\n          radius='4'\n          fill='red'\n        />\n        {Object.keys(this.state.items).map(this.renderClickableItem)}\n      </Layer>\n    );\n  }\n}\n","import { Component } from 'react';\nimport { Stage } from 'react-konva';\nimport YAML from 'yaml';\nimport CombinationLock from 'combination-lock-react'\nimport 'combination-lock-react/dist/index.css'\n\nimport InventoryBar from './InventoryBar';\nimport Room from './Room';\n\nconst fetch = require('node-fetch');\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      maxInventorySlots: 10,\n      inventoryItems: [],\n      usedItemIds: [],\n      itemInfo: {},\n      text: '',\n      lastMouseUp: {\n        itemId: null,\n        x: 0,\n        y: 0\n      },\n      room: this.props.defaultRoom,\n      flags: [],\n      imagePreviewUrl: '',\n      activeLock: {\n        code: '',\n        onUnlock: () => {}\n      },\n    };\n  }\n\n  componentDidMount() {\n    fetch(this.props.itemsConfig)\n      .then(r => r.text())\n      .then(text => {\n        this.setState((state) => {\n          return {\n            ...state,\n            itemInfo: YAML.parse(text)\n          };\n        });\n      })\n  }\n\n  playerHasLooted(itemId) {\n    return this.state.inventoryItems.map((item) => item.id).includes(itemId) ||\n           this.state.usedItemIds.includes(itemId);\n  }\n\n  _handleLostItems = (interaction) => {\n    const lostItemIds = interaction.itemsLost;\n    if(!lostItemIds || lostItemIds.length === 0) return false;\n\n    const newInventory = this.state.inventoryItems.filter((item) => !lostItemIds.includes(item.id));\n    this.setState({\n      ...this.state,\n      inventoryItems: newInventory,\n      usedItemIds: [\n        ...this.state.usedItemIds,\n        ...lostItemIds\n      ]\n    });\n    return true;\n  }\n\n  _handleHiddenItems = (interaction) => {\n    if(!interaction.itemsGained) return false;\n\n    let found = false;\n    for(let hiddenItemId of interaction.itemsGained) {\n      if(!this.playerHasLooted(hiddenItemId) && this.state.itemInfo[hiddenItemId]) {\n        found = true;\n        const hiddenItem = this.state.itemInfo[hiddenItemId];\n        const image = new window.Image();\n        image.src = `images/${hiddenItem.id}.png`;\n        image.onload = () => {\n          this.setState({\n            ...this.state,\n            inventoryItems: [\n              ...this.state.inventoryItems,\n              {\n                ...hiddenItem,\n                image\n              }\n            ],\n            flags: [\n              ...this.state.flags,\n              `${hiddenItemId}_obtained`\n            ]\n          });\n        }\n      }\n    }\n    return found;\n  }\n\n  _handleRoomTransitions = (interaction) => {\n    const room = interaction.newRoom;\n    if(room) {\n      this.setState({\n        ...this.state,\n        room\n      });\n      return true;\n    }\n    return false;\n  }\n\n  _handleFlagsSet = (interaction) => {\n    const newFlags = interaction.flagsSet?.filter(\n      (flag) => !this.state.flags.includes(flag)\n    );\n\n    if(newFlags?.length > 0) {\n      this.setState({\n        ...this.state,\n        flags: [\n          ...this.state.flags,\n          ...newFlags\n        ]\n      });\n      return true;\n    }\n    return false;\n  }\n\n  _handleLocks = (interaction) => {\n    if(interaction.code) {\n      // skip this lock if everything it unlocks has already been unlocked\n      const unlockFlags = interaction.unlocks.map((itemId) => `${itemId}_unlocked`);\n      for(let flag of unlockFlags) {\n        if(this.state.flags.includes(flag)) return;\n      }\n\n      this.setState({\n        ...this.state,\n        activeLock: {\n          code: interaction.code,\n          onUnlock: () => {\n            this.setState({\n              ...this.state,\n              flags: [\n                ...this.state.flags,\n                ...unlockFlags\n              ]\n            })\n          }\n        }\n      })\n    }\n  }\n\n  _getValidInteractions = (interactions, type) => {\n    return interactions\n      ?.filter((interaction) => interaction.type === type)\n      ?.filter((interaction) =>\n          !interaction.requiredFlags ||\n          interaction.requiredFlags.filter(\n            (flag) => !this.state.flags.includes(flag)\n          ).length === 0)\n  }\n\n  _getImagePreviewUrl = (itemId) => {\n     let itemUrl = `images/${itemId}.png`;\n     let image = new Image();\n     image.src = itemUrl;\n     if (image.width === 0) {\n        return '';\n      }\n      return itemUrl;\n  }\n\n  reset = (clickedItemId='') => {\n    this.setState({\n      ...this.state,\n      imagePreviewUrl: this._getImagePreviewUrl(clickedItemId),\n      activeLock: {\n        code: '',\n        onUnlock: () => {}\n      },\n    })\n  }\n\n  itemClickHandler = (clickedItem) => {\n    this.reset(clickedItem?.id);\n    let found = false;\n    this._getValidInteractions(clickedItem.interactions, 'click')\n      ?.forEach((interaction) => {\n          found = true;\n          this.setState({\n            ...this.state,\n            text: interaction.text,\n          });\n\n          this._handleHiddenItems(interaction);\n          this._handleLostItems(interaction);\n          this._handleFlagsSet(interaction);\n          this._handleRoomTransitions(interaction);\n          this._handleLocks(interaction);\n    })\n    if(!found) {\n      this.setState({\n        ...this.state,\n        text: clickedItem.description,\n      });\n    }\n  }\n\n  logLastMouseUp = (itemId, {x, y}) => {\n    this.setState({\n      ...this.state,\n      lastMouseUp: {\n        itemId, x, y\n      }\n    })\n  }\n\n  itemDragHandler = (interactions, {x, y}) => {\n    this.reset();\n    let found = false;\n    this._getValidInteractions(interactions, 'drag')?.forEach((interaction) => {\n      if(interaction.target === this.state.lastMouseUp.itemId\n        && x === this.state.lastMouseUp.x\n        && y === this.state.lastMouseUp.y\n      ) {\n        this.setState({\n          ...this.state,\n          text: interaction.text,\n        });\n        found = true;\n        this._handleHiddenItems(interaction);\n        this._handleLostItems(interaction);\n        this._handleFlagsSet(interaction);\n      }\n    });\n    if(!found) {\n      this.setState({\n        ...this.state,\n        text: 'Nothing happens.'\n      });\n    }\n  }\n\n  // todo: reduce duplicated code w/ above function\n  combineItemsHandler = (draggedItem, stationaryItem) => {\n    this.reset();\n    let found = false;\n    this._getValidInteractions(draggedItem.interactions, 'drag')?.forEach((interaction) => {\n      if(interaction.target === stationaryItem.id\n      ) {\n        this.setState({\n          ...this.state,\n          text: interaction.text,\n        });\n        found = true;\n        this._handleHiddenItems(interaction);\n        this._handleLostItems(interaction);\n        this._handleFlagsSet(interaction);\n      }\n    });\n    if(!found) {\n      this.setState({\n        ...this.state,\n        text: 'Nothing happens.'\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"Game\">\n        <Stage className='canvas' width='500' height='1000'>\n          <Room\n            key={this.state.room}\n            config={this.props.roomsConfig[this.state.room]}\n            bgImage={`${this.state.room}.png`}\n            onClick={this.itemClickHandler}\n            onMouseUp={this.logLastMouseUp}\n          />\n          <InventoryBar\n            items={this.state.inventoryItems}\n            maxInventorySlots={this.state.maxInventorySlots}\n            onClick={this.itemClickHandler}\n            onDragEnd={this.itemDragHandler}\n            onCombineItems={this.combineItemsHandler}\n          />\n        </Stage>\n\n        <header className=\"App-header\" style={{display: 'flex', flexDirection: 'column'}}>\n          {this.state.text}\n          <img src={this.state.imagePreviewUrl} alt=\"\" style={{width: '70%', marginTop: '20px'}} />\n          <div style={{color: 'black', display: (this.state.activeLock.code ? 'block' : 'none')}}>\n            <CombinationLock\n              combination={`${this.state.activeLock.code}`}\n              onMatch={this.state.activeLock.onUnlock}\n              openText={'Unlocked!'}\n            />\n          </div>\n        </header>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport {\n  Link,\n } from \"react-router-dom\";\nimport './Navbar.css';\n\nexport default class Navbar extends Component {\n  _renderGameLink = (gameID) => {\n    return (\n      <li>\n        <Link id={gameID} to={`/${gameID}`}>{this.props.gamesConfig[gameID].name}</Link>\n      </li>\n    )\n  }\n\n  render() {\n    return (\n      <nav role='navigation'>\n        <b>Asukii's Adventure Game Maker</b>\n        <ul>\n          <li><a href=\"/\">Home</a></li>\n          <li><a>Games</a>\n            <ul>\n              {Object.keys(this.props.gamesConfig).map(this._renderGameLink)}\n            </ul>\n          </li>\n          <li><a href=\"#/contact\">Contact</a></li>\n        </ul>\n      </nav>\n    );\n  }\n}\n","export default __webpack_public_path__ + \"static/media/room1.8ab027f1.yaml\";","export default __webpack_public_path__ + \"static/media/room2.c6fee66f.yaml\";","import { Component } from 'react';\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n  Link,\n  useParams,\n } from \"react-router-dom\";\nimport Game from './Game';\nimport Navbar from './Navbar';\nimport './App.css';\n\nimport Room1Config from './config/room1.yaml';\nimport Room2Config from './config/room2.yaml';\nimport DemoGameItemsConfig from './config/items.yaml'\n\n// TODO: make this auto-load based on subfolder structures\nconst gamesConfig = {\n  \"demo-game\": {\n    name: \"Demo Game\",\n    defaultRoom: \"room1\",\n    itemsConfig: DemoGameItemsConfig,\n    roomsConfig: {\n      room1: Room1Config,\n      room2: Room2Config,\n    }\n  }\n}\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Router>\n      <Navbar gamesConfig={gamesConfig} />\n      <div className=\"App\">\n\n\n        <Switch>\n          <Route exact path=\"/\">\n            <HomePage />\n          </Route>\n          <Route exact path=\"/contact\">\n            <ContactPage />\n          </Route>\n          <Route path=\"/:id\" children={<RoutedGame />} />\n        </Switch>\n\n        </div>\n      </Router>\n    );\n  }\n}\n\nfunction HomePage() {\n  return (\n    <div className=\"infopage\" style={{color: \"lightgrey\", marginLeft: \"25px\"}}>\n      <h3> What is this? </h3>\n      <p>\n        I'm making a thing. For making adventure games. Like,\n        your old school point-and-click style browser games.\n        I guess you could call it a \"game engine\", but that makes\n        it sound fancier than it is. ¯\\_(ツ)_/¯\n      </p>\n      <p>\n        I've got a short basic <Link id=\"demo-game-body-embed\" to=\"demo-game\">demo game</Link> up\n        right now, which shows (most of) what you can do with this thing. For example:\n      </p>\n      <ul>\n        <li> Clicking on stuff in rooms <i>(wow!!)</i></li>\n        <li> Finding hidden objects, tracking inventory items, and auto-removing \"spent\" items </li>\n        <li> Combining inventory items together </li>\n        <li> Dragging-and-dropping inventory items onto specific spots in the room, to interact </li>\n        <li> Locking doors & other objects with either keys or numerical passcodes </li>\n        <li> Conditional game states - i.e. only do X if Y has happened first </li>\n        <li> Optional custom dialogue for any interactions (or combos of interactions) - including ones that <i>don't</i> do anything</li>\n      </ul>\n      <h3>Can *I* make an adventure game using this, then?</h3>\n      <p>\n        I mean, if you want, sure! You'll have to write some text* files\n        formatted in a particular way, to set up things like \"when someone\n        clicks on X, then Y should happen.\" While you don't have\n        to know how to write code yourself to work with those text files,\n        it <i>would</i> probably make it a bit easier. If you're interested,\n        let me know, and I'll get you some examples of how to format those\n        text files in a way that the \"engine\" can understand -- then just\n        send the results over to me, along with whatever images you want to use,\n        and I'll happily get your game hosted on this site :)\n      </p>\n\n      <p>\n        If writing those config files from scratch is a bit too intimidating,\n        I'm also thinking about making a fancier \"admin interface\"\n        at some point. Then, instead of needing to write the config text files\n        by hand, you could click on things & fill out forms in a \"game-maker-style\"\n        UI, which would then generate your config files for you & let you test\n        the game as you build it.\n        If you're interested at <i>that</i> point, let me know, and I'll ping you when it's live :)\n      </p>\n\n      <small><i>* to be pedantic, I'm using .YAML files, not .txt files, but whatever... close enough.</i></small>\n\n      <h3>Can I do [insert thing here] with your game maker?</h3>\n      <p>\n        If you see it in the list of bullet points up above: <b>YES!</b>\n      </p>\n      <p>\n        If you don't: <b>STILL MAYBE!</b> I might just not have bothered to write it out explicitly.\n        Feel free to <Link id=\"contact-body-embed\" to=\"contact\">get in touch</Link>:\n        if it's possible, I'll happily walk you through how to do it, and if not, I'll\n        happily take feature requests :)\n      </p>\n    </div>\n  );\n}\n\nfunction ContactPage() {\n  return (\n    <div className=\"infopage\" style={{color: \"lightgrey\", marginLeft: \"25px\"}}>\n      <h3> Get in touch </h3>\n      <p>\n        If you're interested in creating a game in this engine, have\n        feedback or feature requests, or just want to learn more in general,\n        feel free to DM me anytime!\n      </p>\n      <p>\n      <ul>\n      <li><b>Twitch:</b> <a href=\"https://twitch.tv/asukii314\">asukii314</a></li>\n      <li><b>Discord:</b> <a href=\"https://discord.gg/VWFmZMNCA4\">Join my server</a>, or DM me @asukii#7286</li>\n      <li><b>Email:</b> <a href=\"mailto:asukii314.twitch@gmail.com\">asukii314.twitch@gmail.com</a></li>\n      </ul>\n      </p>\n    </div>\n  );\n}\n\nfunction RoutedGame() {\n  let { id } = useParams();\n  if(!gamesConfig[id]) {\n    return <p style={{color: \"white\"}}><b>404:</b> No game with that ID could be found.</p>\n  }\n  return (\n    <Game\n      key={id}\n      defaultRoom={gamesConfig[id].defaultRoom}\n      itemsConfig={gamesConfig[id].itemsConfig}\n      roomsConfig={gamesConfig[id].roomsConfig}\n    />\n  );\n}\n","export default __webpack_public_path__ + \"static/media/items.69ffdaad.yaml\";","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}