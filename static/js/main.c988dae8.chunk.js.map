{"version":3,"sources":["InventoryBar.js","Room.js","config/room1.yaml","config/room2.yaml","config/items.yaml","App.js","reportWebVitals.js","index.js"],"names":["InventoryBar","dragStartHandler","e","setState","state","lastInvCoords","x","target","attrs","y","dragEndHandler","item","layer","refs","id","parent","position","slot","getInventorySlotForCoords","getStage","getPointerPosition","props","items","length","onCombineItems","onDragEnd","interactions","draw","xSlot","Math","ceil","ySlot","posn","maxInventorySlots","renderInventorySlot","i","floor","width","height","fill","shadowBlur","shadowOpacity","renderInventoryItem","isHovered","hoveredIdx","ref","image","draggable","onMouseDown","onDragStart","bind","onClick","onTap","onMouseOver","className","this","Array","parseInt","keys","map","Component","fetch","require","Room","_clickHandler","itemId","coords","dotX","dotY","_hoverHandler","hoveredItem","_hoverEndHandler","_mouseUpHandler","onMouseUp","evt","clientX","clientY","renderClickableItem","points","offsetX","offsetY","opacity","closed","onMouseover","onMouseleave","onTouchEnd","config","then","r","text","YAML","parse","window","Image","src","bgImage","onload","radius","Object","App","_handleLostItems","interaction","lostItemId","itemsLost","newInventory","inventoryItems","filter","usedItemIds","_handleHiddenItems","itemsGained","found","hiddenItemId","playerHasLooted","itemInfo","hiddenItem","flags","_handleRoomTransitions","room","newRoom","_handleFlagsSet","newFlags","flagsSet","flag","includes","_handleLocks","code","unlockFlags","unlocks","activeLock","onUnlock","_getValidInteractions","type","requiredFlags","_getImagePreviewUrl","itemUrl","reset","clickedItemId","imagePreviewUrl","itemClickHandler","clickedItem","forEach","description","logLastMouseUp","lastMouseUp","itemDragHandler","combineItemsHandler","draggedItem","stationaryItem","configMap","room1","Room1Config","room2","Room2Config","ItemsConfig","style","display","flexDirection","marginTop","color","combination","onMatch","openText","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c988dae8.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport { Layer, Rect, Image } from 'react-konva';\r\n\r\nexport default class InventoryBar extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      lastInvCoords: {\r\n        x: 0,\r\n        y: 0\r\n      },\r\n      hoveredIdx: 0,\r\n    };\r\n  }\r\n\r\n  dragStartHandler = (e) => {\r\n    this.setState({\r\n      ...this.state,\r\n      lastInvCoords: {\r\n        x: e.target.attrs.x,\r\n        y: e.target.attrs.y\r\n      }\r\n    })\r\n  }\r\n\r\n  dragEndHandler = (item, e) => {\r\n    const layer = this.refs[item.id].parent;\r\n    this.refs[item.id].position(this.state.lastInvCoords);\r\n    let slot = this.getInventorySlotForCoords(e.target.getStage().getPointerPosition());\r\n    if(slot !== null && this.props.items.length > slot) {\r\n      this.props.onCombineItems(item, this.props.items[slot])\r\n    } else {\r\n      this.props.onDragEnd(item.interactions, e.target.getStage().getPointerPosition());\r\n    }\r\n    layer.draw();\r\n  }\r\n\r\n  getInventorySlotForCoords = ({x, y}) => {\r\n    let xSlot = Math.ceil((x-5)/50);\r\n    let ySlot = Math.ceil((y-510)/50);\r\n    if(xSlot < 1 || xSlot > 10 || ySlot < 1) return null;\r\n    let posn = 10*(ySlot-1)+(xSlot-1);\r\n    if(posn >= this.props.maxInventorySlots) return null;\r\n    return posn;\r\n  }\r\n\r\n  renderInventorySlot = (item, i) => {\r\n    return (\r\n      <Rect\r\n        key={i}\r\n        x={(5 + 50*(i % 10))}\r\n        y={515 + Math.floor(i/10) * 50}\r\n        width={40}\r\n        height={40}\r\n        fill=\"grey\"\r\n        shadowBlur={10}\r\n        shadowOpacity={0.4}\r\n      />\r\n    )\r\n  }\r\n\r\n  renderInventoryItem = (item, i, isHovered=false) => {\r\n    if(!isHovered && i === this.state.hoveredIdx) return;\r\n    return (\r\n      <Image\r\n        ref={item.id}\r\n        key={item.id}\r\n        x={(5 + 50*(i % 10))}\r\n        y={515 + Math.floor(i/10) * 50}\r\n        width={40}\r\n        height={40}\r\n        image={item.image}\r\n        draggable\r\n        onMouseDown={this.dragStartHandler}\r\n        onDragStart={this.dragStartHandler}\r\n        onDragEnd={this.dragEndHandler.bind(this, item)}\r\n        onClick={this.props.onClick.bind(this, item)}\r\n        onTap={this.props.onClick.bind(this, item)}\r\n        onMouseOver={() => {\r\n          this.setState({\r\n            ...this.state,\r\n            hoveredIdx: i\r\n          })\r\n        }}\r\n      />\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Layer className='inventoryLayer'>\r\n        <Rect\r\n          x={0}\r\n          y={510}\r\n          width={500}\r\n          height={50*Math.ceil(this.props.maxInventorySlots/10)}\r\n          fill=\"dimgray\"\r\n          shadowBlur={10}\r\n        />\r\n        {[...Array(parseInt(this.props.maxInventorySlots)).keys()].map(this.renderInventorySlot)}\r\n\r\n        {/* render the item being hovered after all others, so it has the highest z-index when dragged */}\r\n        {this.props.items?.map((item, i) => (this.renderInventoryItem(item, i)))}\r\n        {this.props.items.length > 0 && this.renderInventoryItem(this.props.items[this.state.hoveredIdx], this.state.hoveredIdx, true)}\r\n      </Layer>\r\n    );\r\n  }\r\n}\r\n","import { Component } from 'react';\nimport { Layer, Line, Image, Circle } from 'react-konva';\nimport YAML from 'yaml'\n\nconst fetch = require('node-fetch');\n\nexport default class Room extends Component {\n  constructor() {\n    super();\n    this.state = {\n      dotX: -10,\n      dotY: -10,\n      hoveredItem: null,\n      image: null,\n      items: {}\n    };\n  }\n\n  componentDidMount() {\n    fetch(this.props.config)\n      .then(r => r.text())\n      .then(text => {\n        this.setState((state) => {\n          return {\n            ...state,\n            items: YAML.parse(text)\n          };\n        });\n      })\n\n    const image = new window.Image();\n    image.src = `images/${this.props.bgImage}`;\n    image.onload = () => {\n      this.setState({\n        ...this.state,\n        image: image\n      });\n    }\n  }\n\n  _clickHandler = (itemId, coords) => {\n    this.props.onClick(this.state.items[itemId])\n    this.setState((state) => {\n      return {\n        ...state,\n        dotX: coords.x,\n        dotY: coords.y,\n      }\n    })\n  }\n\n  _hoverHandler = (itemId) => {\n    this.setState((state) => {\n      return {\n        ...state,\n        hoveredItem: itemId\n      }\n    })\n  }\n\n  _hoverEndHandler = (itemId, e) => {\n    this.setState((state) => {\n      return {\n        ...state,\n        hoveredItem: null\n      }\n    })\n  }\n\n  _mouseUpHandler = (itemId, e) => {\n    this.props.onMouseUp(itemId, e.target.getStage().getPointerPosition())\n    this.setState({\n      ...this.state,\n      dotX: e.evt.clientX,\n      dotY: e.evt.clientY\n    })\n  }\n\n  renderClickableItem = (itemId) => {\n    const item = this.state.items[itemId];\n    if(!item) return;\n    return (\n      <Line\n        key={itemId}\n        points={item.position.points}\n        x={item.position.offsetX}\n        y={item.position.offsetY}\n        opacity={this.state.hoveredItem === itemId ? 0.2 : 0}\n        fill='orange'\n        closed\n        onClick={(e) => this._clickHandler(itemId, {x: e.evt.clientX, y: e.evt.clientY})}\r\n        onTap={(e) => this._clickHandler(itemId, e.target.getStage().getPointerPosition())}\n        onMouseover={this._hoverHandler.bind(this, itemId)}\n        onMouseleave={this._hoverEndHandler.bind(this, itemId)}\r\n        onTouchEnd={this._mouseUpHandler.bind(this, itemId)}\n        onMouseUp={this._mouseUpHandler.bind(this, itemId)}\n      />\n    )\n  }\n\n\n  render() {\n    if(!this.state) return null;\n    return (\n      <Layer className='imgLayer'>\n        <Image\n          x={0}\n          y={0}\n          width={500}\n          height={500}\n          image={this.state.image}\n        />\n        <Circle\n          x={this.state.dotX}\n          y={this.state.dotY}\n          radius='4'\n          fill='red'\n        />\n        {Object.keys(this.state.items).map(this.renderClickableItem)}\n      </Layer>\n    );\n  }\n}\n","export default __webpack_public_path__ + \"static/media/room1.2c16b0ab.yaml\";","export default __webpack_public_path__ + \"static/media/room2.c6fee66f.yaml\";","export default __webpack_public_path__ + \"static/media/items.9938ba28.yaml\";","import { Component } from 'react';\r\nimport { Stage } from 'react-konva';\r\nimport YAML from 'yaml';\r\nimport CombinationLock from 'combination-lock-react'\r\nimport 'combination-lock-react/dist/index.css'\r\n\r\nimport InventoryBar from './InventoryBar';\r\nimport Room from './Room';\r\nimport './App.css';\r\n\r\nimport Room1Config from './config/room1.yaml';\r\nimport Room2Config from './config/room2.yaml';\r\nimport ItemsConfig from './config/items.yaml'\r\n\r\nconst fetch = require('node-fetch');\r\n\r\nexport default class App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      maxInventorySlots: 10,\r\n      inventoryItems: [],\r\n      usedItemIds: [],\r\n      itemInfo: {},\r\n      text: '',\r\n      lastMouseUp: {\r\n        itemId: null,\r\n        x: 0,\r\n        y: 0\r\n      },\r\n      room: 'room1',\r\n      flags: [],\r\n      imagePreviewUrl: '',\r\n      activeLock: {\r\n        code: '',\r\n        onUnlock: () => {}\r\n      },\r\n    };\r\n\r\n    this.configMap = {\r\n      room1: Room1Config,\r\n      room2: Room2Config\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(ItemsConfig)\r\n      .then(r => r.text())\r\n      .then(text => {\r\n        this.setState((state) => {\r\n          return {\r\n            ...state,\r\n            itemInfo: YAML.parse(text)\r\n          };\r\n        });\r\n      })\r\n  }\r\n\r\n  playerHasLooted(itemId) {\r\n    return this.state.inventoryItems.map((item) => item.id).includes(itemId) ||\r\n           this.state.usedItemIds.includes(itemId);\r\n  }\r\n\r\n  _handleLostItems = (interaction) => {\r\n    const lostItemId = interaction.itemsLost?.[0]; // TODO: one-to-many support here\r\n    if(!lostItemId) return false;\r\n\r\n    const newInventory = this.state.inventoryItems.filter((item) => item.id !== lostItemId);\r\n    this.setState({\r\n      ...this.state,\r\n      inventoryItems: newInventory,\r\n      usedItemIds: [\r\n        ...this.state.usedItemIds,\r\n        lostItemId\r\n      ]\r\n    });\r\n    return true;\r\n  }\r\n\r\n  _handleHiddenItems = (interaction) => {\r\n    if(!interaction.itemsGained) return false;\r\n\r\n    let found = false;\r\n    for(let hiddenItemId of interaction.itemsGained) {\r\n      if(!this.playerHasLooted(hiddenItemId) && this.state.itemInfo[hiddenItemId]) {\r\n        found = true;\r\n        const hiddenItem = this.state.itemInfo[hiddenItemId];\r\n        const image = new window.Image();\r\n        image.src = `images/${hiddenItem.id}.png`;\r\n        image.onload = () => {\r\n          this.setState({\r\n            ...this.state,\r\n            inventoryItems: [\r\n              ...this.state.inventoryItems,\r\n              {\r\n                ...hiddenItem,\r\n                image\r\n              }\r\n            ],\r\n            flags: [\r\n              ...this.state.flags,\r\n              `${hiddenItemId}_obtained`\r\n            ]\r\n          });\r\n        }\r\n      }\r\n    }\r\n    return found;\r\n  }\r\n\r\n  _handleRoomTransitions = (interaction) => {\r\n    const room = interaction.newRoom;\r\n    if(room) {\r\n      this.setState({\r\n        ...this.state,\r\n        room\r\n      });\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  _handleFlagsSet = (interaction) => {\r\n    const newFlags = interaction.flagsSet?.filter(\r\n      (flag) => !this.state.flags.includes(flag)\r\n    );\r\n\r\n    if(newFlags?.length > 0) {\r\n      this.setState({\r\n        ...this.state,\r\n        flags: [\r\n          ...this.state.flags,\r\n          ...newFlags\r\n        ]\r\n      });\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  _handleLocks = (interaction) => {\r\n    if(interaction.code) {\r\n      // skip this lock if everything it unlocks has already been unlocked\r\n      const unlockFlags = interaction.unlocks.map((itemId) => `${itemId}_unlocked`);\r\n      for(let flag of unlockFlags) {\r\n        if(this.state.flags.includes(flag)) return;\r\n      }\r\n\r\n      this.setState({\r\n        ...this.state,\r\n        activeLock: {\r\n          code: interaction.code,\r\n          onUnlock: () => {\r\n            this.setState({\r\n              ...this.state,\r\n              flags: [\r\n                ...this.state.flags,\r\n                ...unlockFlags\r\n              ]\r\n            })\r\n          }\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  _getValidInteractions = (interactions, type) => {\r\n    return interactions\r\n      ?.filter((interaction) => interaction.type === type)\r\n      ?.filter((interaction) =>\r\n          !interaction.requiredFlags ||\r\n          interaction.requiredFlags.filter(\r\n            (flag) => !this.state.flags.includes(flag)\r\n          ).length === 0)\r\n  }\r\n\r\n  _getImagePreviewUrl = (itemId) => {\r\n     let itemUrl = `images/${itemId}.png`;\r\n     let image = new Image();\r\n     image.src = itemUrl;\r\n     if (image.width === 0) {\r\n        return '';\r\n      }\r\n      return itemUrl;\r\n  }\r\n\r\n  reset = (clickedItemId='') => {\r\n    this.setState({\r\n      ...this.state,\r\n      imagePreviewUrl: this._getImagePreviewUrl(clickedItemId),\r\n      activeLock: {\r\n        code: '',\r\n        onUnlock: () => {}\r\n      },\r\n    })\r\n  }\r\n\r\n  itemClickHandler = (clickedItem) => {\r\n    this.reset(clickedItem?.id);\r\n    let found = false;\r\n    this._getValidInteractions(clickedItem.interactions, 'click')\r\n      ?.forEach((interaction) => {\r\n          found = true;\r\n          this.setState({\r\n            ...this.state,\r\n            text: interaction.text,\r\n          });\r\n\r\n          this._handleHiddenItems(interaction);\r\n          this._handleLostItems(interaction);\r\n          this._handleFlagsSet(interaction);\r\n          this._handleRoomTransitions(interaction);\r\n          this._handleLocks(interaction);\r\n    })\r\n    if(!found) {\r\n      this.setState({\r\n        ...this.state,\r\n        text: clickedItem.description,\r\n      });\r\n    }\r\n  }\r\n\r\n  logLastMouseUp = (itemId, {x, y}) => {\r\n    this.setState({\r\n      ...this.state,\r\n      lastMouseUp: {\r\n        itemId, x, y\r\n      }\r\n    })\r\n  }\r\n\r\n  itemDragHandler = (interactions, {x, y}) => {\r\n    this.reset();\r\n    let found = false;\r\n    this._getValidInteractions(interactions, 'drag')?.forEach((interaction) => {\r\n      if(interaction.target === this.state.lastMouseUp.itemId\r\n        && x === this.state.lastMouseUp.x\r\n        && y === this.state.lastMouseUp.y\r\n      ) {\r\n        this.setState({\r\n          ...this.state,\r\n          text: interaction.text,\r\n        });\r\n        found = true;\r\n        this._handleHiddenItems(interaction);\r\n        this._handleLostItems(interaction);\r\n        this._handleFlagsSet(interaction);\r\n      }\r\n    });\r\n    if(!found) {\r\n      this.setState({\r\n        ...this.state,\r\n        text: 'Nothing happens.'\r\n      });\r\n    }\r\n  }\r\n\r\n  // todo: reduce duplicated code w/ above function\r\n  combineItemsHandler = (draggedItem, stationaryItem) => {\r\n    this.reset();\r\n    let found = false;\r\n    this._getValidInteractions(draggedItem.interactions, 'drag')?.forEach((interaction) => {\r\n      if(interaction.target === stationaryItem.id\r\n      ) {\r\n        this.setState({\r\n          ...this.state,\r\n          text: interaction.text,\r\n        });\r\n        found = true;\r\n        this._handleHiddenItems(interaction);\r\n        this._handleLostItems(interaction);\r\n        this._handleFlagsSet(interaction);\r\n      }\r\n    });\r\n    if(!found) {\r\n      this.setState({\r\n        ...this.state,\r\n        text: 'Nothing happens.'\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n      <Stage className='canvas' width='500' height='1000'>\r\n        <Room\r\n          key={this.state.room}\r\n          config={this.configMap[this.state.room]}\r\n          bgImage={`${this.state.room}.png`}\r\n          onClick={this.itemClickHandler}\r\n          onMouseUp={this.logLastMouseUp}\r\n        />\r\n        <InventoryBar\r\n          items={this.state.inventoryItems}\r\n          maxInventorySlots={this.state.maxInventorySlots}\r\n          onClick={this.itemClickHandler}\r\n          onDragEnd={this.itemDragHandler}\r\n          onCombineItems={this.combineItemsHandler}\r\n        />\r\n      </Stage>\r\n\r\n      <header className=\"App-header\" style={{display: 'flex', flexDirection: 'column'}}>\r\n        {this.state.text}\r\n        <img src={this.state.imagePreviewUrl} style={{width: '70%', marginTop: '20px'}} />\r\n        <div style={{color: 'black', display: (this.state.activeLock.code ? 'block' : 'none')}}>\r\n          <CombinationLock\r\n            combination={`${this.state.activeLock.code}`}\r\n            onMatch={this.state.activeLock.onUnlock}\r\n            openText={'Unlocked!'}\r\n          />\r\n        </div>\r\n      </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}