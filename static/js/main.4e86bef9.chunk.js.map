{"version":3,"sources":["InventoryBar.js","Room.js","config/room1.yaml","config/room2.yaml","config/items.yaml","App.js","reportWebVitals.js","index.js"],"names":["InventoryBar","dragStartHandler","e","setState","state","lastInvCoords","x","target","attrs","y","dragEndHandler","item","layer","refs","id","parent","position","props","onDragEnd","interactions","evt","clientX","clientY","draw","renderInventorySlot","i","Math","floor","width","height","fill","shadowBlur","shadowOpacity","renderInventoryItem","ref","image","draggable","onMouseDown","bind","onClick","className","ceil","this","maxInventorySlots","Array","parseInt","keys","map","items","Component","fetch","require","Room","_clickHandler","itemId","dotX","pageX","dotY","pageY","_hoverHandler","hoveredItem","_hoverEndHandler","_mouseUpHandler","onMouseUp","renderClickableItem","points","offsetX","offsetY","opacity","closed","onMouseover","onMouseleave","config","then","r","text","YAML","parse","window","Image","src","bgImage","onload","radius","Object","App","_handleLostItems","interaction","lostItemId","itemsLost","newInventory","inventoryItems","filter","usedItemIds","_handleHiddenItems","itemsGained","found","hiddenItemId","playerHasLooted","itemInfo","hiddenItem","_handleRoomTransitions","room","newRoom","_handleFlagsSet","newFlags","flagsSet","flag","flags","includes","length","_handleLocks","code","unlockFlags","unlocks","activeLock","onUnlock","_getValidInteractions","type","requiredFlags","_getImagePreviewUrl","itemUrl","_clearOldSettings","console","log","imagePreviewUrl","itemClickHandler","clickedItem","forEach","description","logLastMouseUp","lastMouseUp","itemDragHandler","configMap","room1","Room1Config","room2","Room2Config","ItemsConfig","style","display","flexDirection","marginTop","color","combination","onMatch","openText","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4e86bef9.chunk.js","sourcesContent":["import { Component } from 'react';\nimport { Layer, Rect, Image } from 'react-konva';\n\nexport default class InventoryBar extends Component {\n  constructor() {\n    super();\n    this.state = {\n      lastInvCoords: {\n        x: 0,\n        y: 0\n      },\n    };\n  }\n\n  dragStartHandler = (e) => {\n    this.setState({\n      ...this.state,\n      lastInvCoords: {\n        x: e.target.attrs.x,\n        y: e.target.attrs.y\n      }\n    })\n  }\n\n  dragEndHandler = (item, e) => {\n    const layer = this.refs[item.id].parent;\n    this.refs[item.id].position(this.state.lastInvCoords);\n    this.props.onDragEnd(item.interactions, e.evt.clientX, e.evt.clientY);\n    layer.draw();\n  }\n\n  renderInventorySlot = (item, i) => {\n    return (\n      <Rect\n        key={i}\n        x={(5 + 50*(i % 10))}\n        y={515 + Math.floor(i/10) * 50}\n        width={40}\n        height={40}\n        fill=\"grey\"\n        shadowBlur={10}\n        shadowOpacity={0.4}\n      />\n    )\n  }\n\n  renderInventoryItem = (item, i) => {\n    return (\n      <Image\n        ref={item.id}\n        key={item.id}\n        x={(5 + 50*(i % 10))}\n        y={515 + Math.floor(i/10) * 50}\n        width={40}\n        height={40}\n        image={item.image}\n        draggable\n        onMouseDown={this.dragStartHandler}\n        onDragEnd={this.dragEndHandler.bind(this, item)}\n        onClick={this.props.onClick.bind(this, item)}\n      />\n    )\n  }\n\n  render() {\n    return (\n      <Layer className='inventoryLayer'>\n        <Rect\n          x={0}\n          y={510}\n          width={500}\n          height={50*Math.ceil(this.props.maxInventorySlots/10)}\n          fill=\"dimgray\"\n          shadowBlur={10}\n        />\n        {[...Array(parseInt(this.props.maxInventorySlots)).keys()].map(this.renderInventorySlot)}\n        {this.props.items?.map(this.renderInventoryItem)}\n      </Layer>\n    );\n  }\n}\n","import { Component } from 'react';\nimport { Layer, Line, Image, Circle } from 'react-konva';\nimport YAML from 'yaml'\n\nconst fetch = require('node-fetch');\n\nexport default class Room extends Component {\n  constructor() {\n    super();\n    this.state = {\n      dotX: -10,\n      dotY: -10,\n      hoveredItem: null,\n      image: null,\n      items: {}\n    };\n  }\n\n  componentDidMount() {\n    fetch(this.props.config)\n      .then(r => r.text())\n      .then(text => {\n        this.setState((state) => {\n          return {\n            ...state,\n            items: YAML.parse(text)\n          };\n        });\n      })\n\n    const image = new window.Image();\n    image.src = `images/${this.props.bgImage}`;\n    image.onload = () => {\n      this.setState({\n        ...this.state,\n        image: image\n      });\n    }\n  }\n\n  _clickHandler = (itemId, e) => {\n    this.props.onClick(this.state.items[itemId])\n    this.setState((state) => {\n      return {\n        ...state,\n        dotX: e.evt.pageX,\n        dotY: e.evt.pageY\n      }\n    })\n  }\n\n  _hoverHandler = (itemId) => {\n    this.setState((state) => {\n      return {\n        ...state,\n        hoveredItem: itemId\n      }\n    })\n  }\n\n  _hoverEndHandler = (itemId, e) => {\n    this.setState((state) => {\n      return {\n        ...state,\n        hoveredItem: null\n      }\n    })\n  }\n\n  _mouseUpHandler = (itemId, e) => {\n    this.props.onMouseUp(itemId, e.evt.clientX, e.evt.clientY)\n    this.setState({\n      ...this.state,\n      dotX: e.evt.clientX,\n      dotY: e.evt.clientY\n    })\n  }\n\n  renderClickableItem = (itemId) => {\n    const item = this.state.items[itemId];\n    if(!item) return;\n    return (\n      <Line\n        key={itemId}\n        points={item.position.points}\n        x={item.position.offsetX}\n        y={item.position.offsetY}\n        opacity={this.state.hoveredItem === itemId ? 0.2 : 0}\n        fill='orange'\n        closed\n        onClick={this._clickHandler.bind(this, itemId)}\n        onMouseover={this._hoverHandler.bind(this, itemId)}\n        onMouseleave={this._hoverEndHandler.bind(this, itemId)}\n        onMouseUp={this._mouseUpHandler.bind(this, itemId)}\n      />\n    )\n  }\n\n\n  render() {\n    if(!this.state) return null;\n    return (\n      <Layer className='imgLayer'>\n        <Image\n          x={0}\n          y={0}\n          width={500}\n          height={500}\n          image={this.state.image}\n        />\n        <Circle\n          x={this.state.dotX}\n          y={this.state.dotY}\n          radius='4'\n          fill='red'\n        />\n        {Object.keys(this.state.items).map(this.renderClickableItem)}\n      </Layer>\n    );\n  }\n}\n","export default __webpack_public_path__ + \"static/media/room1.ad859456.yaml\";","export default __webpack_public_path__ + \"static/media/room2.c6fee66f.yaml\";","export default __webpack_public_path__ + \"static/media/items.1f0219ed.yaml\";","import { Component } from 'react';\nimport { Stage } from 'react-konva';\nimport YAML from 'yaml';\nimport CombinationLock from 'combination-lock-react'\nimport 'combination-lock-react/dist/index.css'\n\nimport InventoryBar from './InventoryBar';\nimport Room from './Room';\nimport './App.css';\n\nimport Room1Config from './config/room1.yaml';\nimport Room2Config from './config/room2.yaml';\nimport ItemsConfig from './config/items.yaml'\n\nconst fetch = require('node-fetch');\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      maxInventorySlots: 10,\n      inventoryItems: [],\n      usedItemIds: [],\n      itemInfo: {},\n      text: '',\n      lastMouseUp: {\n        itemId: null,\n        x: 0,\n        y: 0\n      },\n      room: 'room1',\n      flags: [],\n      imagePreviewUrl: '',\n      activeLock: {\n        code: '',\n        onUnlock: () => {}\n      },\n    };\n\n    this.configMap = {\n      room1: Room1Config,\n      room2: Room2Config\n    }\n  }\n\n  componentDidMount() {\n    fetch(ItemsConfig)\n      .then(r => r.text())\n      .then(text => {\n        this.setState((state) => {\n          return {\n            ...state,\n            itemInfo: YAML.parse(text)\n          };\n        });\n      })\n  }\n\n  playerHasLooted(itemId) {\n    return this.state.inventoryItems.map((item) => item.id).includes(itemId) ||\n           this.state.usedItemIds.includes(itemId);\n  }\n\n  _handleLostItems = (interaction) => {\n    const lostItemId = interaction.itemsLost?.[0]; // TODO: one-to-many support here\n    if(!lostItemId) return false;\n\n    const newInventory = this.state.inventoryItems.filter((item) => item.id !== lostItemId);\n    this.setState({\n      ...this.state,\n      inventoryItems: newInventory,\n      usedItemIds: [\n        ...this.state.usedItemIds,\n        lostItemId\n      ]\n    });\n    return true;\n  }\n\n  _handleHiddenItems = (interaction) => {\n    if(!interaction.itemsGained) return false;\n\n    let found = false;\n    for(let hiddenItemId of interaction.itemsGained) {\n      if(!this.playerHasLooted(hiddenItemId) && this.state.itemInfo[hiddenItemId]) {\n        found = true;\n        const hiddenItem = this.state.itemInfo[hiddenItemId];\n        const image = new window.Image();\n        image.src = `images/${hiddenItem.id}.png`;\n        image.onload = () => {\n          this.setState({\n            ...this.state,\n            inventoryItems: [\n              ...this.state.inventoryItems,\n              {\n                ...hiddenItem,\n                image\n              }\n            ]\n          });\n        }\n      }\n    }\n    return found;\n  }\n\n  _handleRoomTransitions = (interaction) => {\n    const room = interaction.newRoom;\n    if(room) {\n      this.setState({\n        ...this.state,\n        room\n      });\n      return true;\n    }\n    return false;\n  }\n\n  _handleFlagsSet = (interaction) => {\n    const newFlags = interaction.flagsSet?.filter(\n      (flag) => !this.state.flags.includes(flag)\n    );\n\n    if(newFlags?.length > 0) {\n      this.setState({\n        ...this.state,\n        flags: [\n          ...this.state.flags,\n          ...newFlags\n        ]\n      });\n      return true;\n    }\n    return false;\n  }\n\n  _handleLocks = (interaction) => {\n    if(interaction.code) {\n      // skip this lock if everything it unlocks has already been unlocked\n      const unlockFlags = interaction.unlocks.map((itemId) => `${itemId}_unlocked`);\n      for(let flag of unlockFlags) {\n        if(this.state.flags.includes(flag)) return;\n      }\n\n      this.setState({\n        ...this.state,\n        activeLock: {\n          code: interaction.code,\n          onUnlock: () => {\n            this.setState({\n              ...this.state,\n              flags: [\n                ...this.state.flags,\n                ...unlockFlags\n              ]\n            })\n          }\n        }\n      })\n    }\n  }\n\n  _getValidInteractions = (interactions, type) => {\n    return interactions\n      ?.filter((interaction) => interaction.type === type)\n      ?.filter((interaction) =>\n          !interaction.requiredFlags ||\n          interaction.requiredFlags.filter(\n            (flag) => !this.state.flags.includes(flag)\n          ).length === 0)\n  }\n\n  _getImagePreviewUrl = (itemId) => {\n     let itemUrl = `images/${itemId}.png`;\n     let image = new Image();\n     image.src = itemUrl;\n     if (image.width === 0) {\n        return '';\n      }\n      return itemUrl;\n  }\n\n  _clearOldSettings = () => {\n    console.log(\"CLEAR\")\n    this.setState({\n      ...this.state,\n      imagePreviewUrl: '',\n      activeLock: {\n        code: '',\n        onUnlock: () => {}\n      },\n    })\n  }\n\n  itemClickHandler = (clickedItem) => {\n    this._clearOldSettings();\n    let found = false;\n    this._getValidInteractions(clickedItem.interactions, 'click')\n      ?.forEach((interaction) => {\n          found = true;\n          this.setState({\n            ...this.state,\n            text: interaction.text,\n          });\n\n          this._handleHiddenItems(interaction);\n          this._handleLostItems(interaction);\n          this._handleFlagsSet(interaction);\n          this._handleRoomTransitions(interaction);\n          this._handleLocks(interaction);\n    })\n    if(!found) {\n      this.setState({\n        ...this.state,\n        text: clickedItem.description,\n        imagePreviewUrl: this._getImagePreviewUrl(clickedItem.id)\n      });\n    }\n  }\n\n  logLastMouseUp = (itemId, x, y) => {\n    this.setState({\n      ...this.state,\n      lastMouseUp: {\n        itemId, x, y\n      }\n    })\n  }\n\n  itemDragHandler = (interactions, x, y) => {\n    this._clearOldSettings();\n    let found = false;\n    this._getValidInteractions(interactions, 'drag')?.forEach((interaction) => {\n      if(interaction.target === this.state.lastMouseUp.itemId\n        && x === this.state.lastMouseUp.x\n        && y === this.state.lastMouseUp.y\n      ) {\n        this.setState({\n          ...this.state,\n          text: interaction.text,\n        });\n        found = true;\n        this._handleHiddenItems(interaction);\n        this._handleLostItems(interaction);\n        this._handleFlagsSet(interaction);\n      }\n    });\n    if(!found) {\n      this.setState({\n        ...this.state,\n        text: 'Nothing happens.'\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n      <Stage className='canvas' width='500' height='1000'>\n        <Room\n          key={this.state.room}\n          config={this.configMap[this.state.room]}\n          bgImage={`${this.state.room}.png`}\n          onClick={this.itemClickHandler}\n          onMouseUp={this.logLastMouseUp}\n        />\n        <InventoryBar\n          items={this.state.inventoryItems}\n          maxInventorySlots={this.state.maxInventorySlots}\n          onClick={this.itemClickHandler}\n          onDragEnd={this.itemDragHandler}\n        />\n      </Stage>\n\n      <header className=\"App-header\" style={{display: 'flex', flexDirection: 'column'}}>\n        {this.state.text}\n        <img src={this.state.imagePreviewUrl} style={{width: '70%', marginTop: '20px'}} />\n        <div style={{color: 'black', display: (this.state.activeLock.code ? 'block' : 'none')}}>\n          <CombinationLock\n            combination={`${this.state.activeLock.code}`}\n            onMatch={this.state.activeLock.onUnlock}\n            openText={'Unlocked!'}\n          />\n        </div>\n      </header>\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}